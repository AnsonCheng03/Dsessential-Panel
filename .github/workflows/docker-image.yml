name: Build and Push Docker Images

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get branch name
        id: get_branch
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          if [ "$BRANCH_NAME" == "main" ]; then
            echo "branch_name=latest" >> $GITHUB_ENV
          else
            SANITIZED_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed -e 's/[^a-zA-Z0-9]/_/g')
            echo "branch_name=$SANITIZED_BRANCH_NAME" >> $GITHUB_ENV
          fi

      - name: Build and push frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./qwik-app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dsessential_frontend:${{ env.branch_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push backend image
        uses: docker/build-push-action@v2
        with:
          context: ./nest-js
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dsessential_backend:${{ env.branch_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
